apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'macAppBundle'
apply plugin: 'launch4j'
apply plugin: 'gradle-one-jar'

group = 'ch.retorte.intervalmusiccompositor'
applicationName = "IntervalMusicCompositor"
mainClassName = "ch.retorte.intervalmusiccompositor.Main"

applicationDefaultJvmArgs = ["-Xmx2048m"]

ext.macosxOutputDir = '/macosxApp'
ext.windowsOutputDir = '/windowsApp'
ext.linuxOutputDir = '/linuxApp'
ext.windowsUberJar = 'uberJar.jar'

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
 }

jar {
    manifest {
        attributes(provider: 'gradle', "Main-Class": mainClassName)
    }
}


// We disable tasks which are not successfully performed on non-OSX hosts.
createDmg.enabled = false

macAppBundle {
  appOutputDir = project.ext.macosxOutputDir
  mainClassName = project.mainClassName
  icon = project(':intervalmusiccompositor.build').file('icons/interval_music_compositor.icns')
  appStyle = 'Oracle'
  appName = project.applicationName
  jvmVersion = "1.8+"
  arguments = ["-Xmx=2048M"]
}

task distOsxApp(type: Tar, dependsOn: createApp) {
  description = "Creates an archive from the Mac OS X version." 
  compression = Compression.GZIP
  baseName = project.applicationName + '-macosx'
  
  into (project.applicationName + '-' + version) {
    from buildDir.absolutePath + project.ext.macosxOutputDir
    from project(':intervalmusiccompositor.build').files('documentation/')
  }
}

task uberJar(type: OneJar) {
  mainClass = project.mainClassName
  archiveName = project.ext.windowsUberJar

  /* This is a little hack putting the ui resources right into the root dir of the uber jar.
      Otherwise the JavaFX application seems to not be able to find them. */
  additionalDir = project(':intervalmusiccompositor.fxUi').file('src/main/resources/')
}

task copyUberJar(type: Copy, dependsOn: [copyL4jLib, uberJar]) {
  from uberJar.outputs.files
  into buildDir.absolutePath + project.ext.windowsOutputDir + '/lib'
}

task distWindowsApp(type: Zip, dependsOn: [uberJar, copyUberJar, createExe]) {
  description = "Creates an archive from the Microsoft Windows version." 
  baseName = applicationName + '-windows'
  
  into (applicationName + '-' + version) {
    from buildDir.absolutePath + project.ext.windowsOutputDir + '/' + applicationName + '.exe'
    from project(':intervalmusiccompositor.build').files('documentation/')
  }
}

task distLinuxApp(type: Tar, dependsOn: installDist) {
  description = "Creates an archive from the Linux version."
  compression = Compression.GZIP
  baseName = applicationName + '-linux'
  extension = 'tar.gz'
  
  into (applicationName + '-' + version) {
    from installDist.outputs
    from project(':intervalmusiccompositor.build').file('icons/interval_music_compositor.svg')
    from project(':intervalmusiccompositor.build').files('documentation/')
  }
}

task distAll(dependsOn: [distOsxApp, distWindowsApp, distLinuxApp]) {
  description = "Creates archives for all supported operating systems."
}




launch4j {
    outputDir = project.ext.windowsOutputDir
    mainClassName = "com.simontuffs.onejar.Boot" // This is the OneJar wrapper.
    icon = project(':intervalmusiccompositor.build').file('icons/interval_music_compositor.ico')

    jreMinVersion = '1.8.0_60'
    version = project.version

    downloadUrl = "http://www.java.com/download/"
    supportUrl = "https://nwaldispuehl.github.io/interval-music-compositor/en/feedback_support"
  
    launch4jCmd = project(':intervalmusiccompositor.build').file('3rdparty/launch4j-3.9/launch4j')

    jar = "lib/" + project.ext.windowsUberJar

    outfile = project.applicationName + '.exe'
    copyright = "retorte.ch"
    maxHeapSize = 1280
}

dependencies {
  compile project(':intervalmusiccompositor.spi')
  compile project(':intervalmusiccompositor.model')
  
	compile project(':intervalmusiccompositor.core')
	compile project(':intervalmusiccompositor.fxUi')

	compile project(':intervalmusiccompositor.beatroot')
	
	compile project(':intervalmusiccompositor.decoder.wave')
	compile project(':intervalmusiccompositor.decoder.flac')
	compile project(':intervalmusiccompositor.decoder.mp3')
	compile project(':intervalmusiccompositor.decoder.ogg')
	compile project(':intervalmusiccompositor.decoder.aac')
	
	compile project(':intervalmusiccompositor.encoder.wave')
	compile project(':intervalmusiccompositor.encoder.mp3')
  compile project(':intervalmusiccompositor.encoder.ogg')
}

buildscript {
    repositories {
    
        mavenLocal()
        mavenCentral()
        
    }
    dependencies {
        classpath 'edu.sc.seis.gradle:launch4j:1.0.6'
        classpath 'edu.sc.seis.gradle:macappbundle:2.0.0'
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
    }
}

